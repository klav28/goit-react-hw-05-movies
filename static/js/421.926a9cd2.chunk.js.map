{"version":3,"file":"static/js/421.926a9cd2.chunk.js","mappings":"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","sources":["components/FilmGalleryItem/FilmGalleryItem.components.jsx","components/FilmGalleryItem/FilmGalleryItem.jsx","components/FIlmGallery/FilmGallery.components.jsx","components/FIlmGallery/FilmGallery.jsx","components/Searchbar/Searchbar.component.jsx","components/Searchbar/Searchbar.jsx","components/Pages/Movies.jsx","components/Vars.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst StGalleryItem = styled.div`\n  height: 100%;\n`;\n\nStGalleryItem.Img = styled.img`\n  list-style: none;\n  display: block;\n`;\n\nStGalleryItem.Title = styled.p`\n  font-size: 18px;\n  color: black;\n  font-weight: 700;\n  padding: 8px;\n`;\n\nStGalleryItem.Details = styled.p`\n  font-size: 14px;\n  color: tomato;\n  padding: 8px;\n  padding-top: 0;\n`;\n\nStGalleryItem.Vote = styled.span`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  width: 35px;\n  height: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #a82d00;\n  border-radius: 50%;\n  color: white;\n  font-size: 14px;\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.75));\n`;\nexport default StGalleryItem;\n","import StGalleryItem from './FilmGalleryItem.components';\nimport PropTypes from 'prop-types';\n\nconst FilmGalleryItem = ({ film }) => {\n  return (\n    <StGalleryItem>\n      <StGalleryItem.Img src={`${film.posterUrl}`} alt={film.title} />\n      <StGalleryItem.Vote>{film.votes}</StGalleryItem.Vote>\n      <StGalleryItem.Title>{film.title}</StGalleryItem.Title>\n      <StGalleryItem.Details>{film.details}</StGalleryItem.Details>\n    </StGalleryItem>\n  );\n};\n\nFilmGalleryItem.propTypes = {\n  film: PropTypes.object.isRequired,\n};\n\nexport default FilmGalleryItem;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst StContainer = styled.div``;\n\nStContainer.Ul = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n`;\n\nStContainer.Card = styled.div`\n  width: 270px;\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n  cursor: pointer;\n  transition: transform cubic-bezier(0.4, 0, 0.2, 1) 250ms;\n\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n\nStContainer.Link = styled(Link)`\n  width: 100%;\n`;\n\nexport default StContainer;\n","import FilmGalleryItem from 'components/FilmGalleryItem/FilmGalleryItem';\nimport StContainer from './FilmGallery.components';\nimport Container from '../Container/Container';\nimport { IMAGE_BASE_URL, noPosterUrl, genres } from '../Vars';\nimport PropTypes from 'prop-types';\n\nconst FilmGallery = ({ filmArray }) => {\n  const filmsList = filmArray.map(film => {\n    const posterUrl = film.poster_path\n      ? `${IMAGE_BASE_URL}w500/${film.poster_path}`\n      : `${noPosterUrl}`;\n\n    let details = '';\n\n    if (film.genre_ids.length > 0) {\n      details = film.genre_ids\n        .slice(0, 2)\n        .map(id => genres[id])\n        .join(', ');\n\n      if (film.genre_ids.length > 2) {\n        details += ', other';\n      }\n\n      if (film.release_date) {\n        details += ' | ' + film.release_date.substr(0, 4);\n      }\n    } else if (film.release_date) {\n      details = film.release_date.substr(0, 4);\n    }\n\n    const vote = String(Math.round(film.vote_average * 10));\n    const votes = vote === '0' ? '0' : vote[0] + '.' + vote[1];\n\n    return { ...film, posterUrl, details, votes };\n  });\n\n  return (\n    <Container>\n      <StContainer.Ul>\n        {filmsList.map(film => (\n          <li key={film.id}>\n            <StContainer.Card>\n              <StContainer.Link to={`movies/${film.id}`}>\n                <FilmGalleryItem film={film} />\n              </StContainer.Link>\n            </StContainer.Card>\n          </li>\n        ))}\n      </StContainer.Ul>\n    </Container>\n  );\n};\n\nFilmGallery.propTypes = {\n  filmArray: PropTypes.array.isRequired,\n};\n\nexport default FilmGallery;\n","import styled from 'styled-components';\n\nconst StyledSearchbar = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding: 12px;\n  margin: 0 auto;\n  /* color: #fff; */\n`;\n\nStyledSearchbar.Form = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  background-color: #fff;\n  overflow: hidden;\n`;\n\nStyledSearchbar.Button = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 96px;\n  height: 48px;\n  border: 0;\n  margin-left: 20px;\n  background-color: #ddd;\n  border-radius: 3px;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nStyledSearchbar.Input = styled.input`\n  display: inline-block;\n  width: 480px;\n  font: inherit;\n  font-size: 20px;\n  border: 1px solid gray;\n  outline: none;\n  padding: 8px;\n  padding-left: 20px;\n  border-radius: 3px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nStyledSearchbar.Header = styled.header`\n  width: 100%;\n`;\n\nexport default StyledSearchbar;\n","import StyledSearchbar from './Searchbar.component';\nimport { BsSearch } from 'react-icons/bs';\n\nconst Searchbar = ({ querystring }) => {\n  return (\n    <StyledSearchbar>\n      <StyledSearchbar.Form>\n        <StyledSearchbar.Input\n          type=\"text\"\n          name=\"query\"\n          autoFocus\n          placeholder=\"Search films...\"\n          defaultValue={querystring}\n        />\n        <StyledSearchbar.Button type=\"submit\">\n          <BsSearch />\n        </StyledSearchbar.Button>\n      </StyledSearchbar.Form>\n    </StyledSearchbar>\n  );\n};\n\nexport default Searchbar;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Container from '../Container/Container';\nimport Searchbar from '../Searchbar/Searchbar';\nimport { API_KEY, BASE_URL } from '../Vars';\nimport axios from 'axios';\nimport FilmGallery from 'components/FIlmGallery/FilmGallery';\n\nconst Movies = () => {\n  const [findedFilms, setFindedFilms] = useState([]);\n  const [searchParams] = useSearchParams();\n\n  const queryString = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const fetchSearch = async page => {\n      try {\n        const response = await axios.get(`${BASE_URL}search/movie`, {\n          params: {\n            api_key: API_KEY,\n            query: queryString,\n            page: page,\n          },\n        });\n        return response.data;\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n\n    if (queryString.trim !== '') {\n      fetchSearch(1).then(data => {\n        setFindedFilms(data.results);\n      });\n    }\n  }, [queryString]);\n\n  return (\n    <Container>\n      <Searchbar querystring={queryString} />\n      {findedFilms.length > 0 && <FilmGallery filmArray={findedFilms} />}\n    </Container>\n  );\n};\n\nexport default Movies;\n","export const API_KEY = 'ef7bafe2e7e1d8d31566e54facf4d836';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/';\nexport const noPosterUrl = new URL(\n  '../images/no-film-poster.jpg',\n  import.meta.url\n);\nexport const noAvatar = new URL('../images/no-avatar.png', import.meta.url);\nexport const genres = {\n  28: 'Action',\n  12: 'Adventure',\n  16: 'Animation',\n  35: 'Comedy',\n  80: 'Crime',\n  99: 'Documentary',\n  18: 'Drama',\n  10751: 'Family',\n  14: 'Fantasy',\n  36: 'History',\n  27: 'Horror',\n  10402: 'Music',\n  9648: 'Mystery',\n  10749: 'Romance',\n  878: 'Science Fiction',\n  10770: 'TV Movie',\n  53: 'Thriller',\n  10752: 'War',\n  37: 'Western',\n};\n"],"names":["StGalleryItem","styled","Img","Title","Details","Vote","film","src","posterUrl","alt","title","votes","details","StContainer","Ul","Card","Link","filmsList","filmArray","map","poster_path","IMAGE_BASE_URL","noPosterUrl","genre_ids","length","slice","id","genres","join","release_date","substr","vote","String","Math","round","vote_average","Container","to","StyledSearchbar","Form","Button","Input","Header","querystring","type","name","autoFocus","placeholder","defaultValue","useState","findedFilms","setFindedFilms","useSearchParams","queryString","get","useEffect","fetchSearch","page","axios","BASE_URL","params","api_key","API_KEY","query","response","data","Error","trim","then","results","FilmGallery","URL","noAvatar"],"sourceRoot":""}
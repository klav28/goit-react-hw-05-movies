{"version":3,"file":"static/js/261.37b2b6cc.chunk.js","mappings":"8QA6BA,EA1BiB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KAClB,OACE,iBAAKC,UAAU,4BAAf,WACE,gBACEA,UAAU,mEACVC,IACEF,EAAKG,aAAL,UACOC,EAAAA,GADP,gBAC6BJ,EAAKG,cADlC,UAEOE,EAAAA,IAETC,IAAKN,EAAKO,QAEZ,cAAGN,UAAU,0DAAb,SACGD,EAAKO,QAER,cAAGN,UAAU,+DAAb,SACGD,EAAKQ,cAIb,ECyBD,EA1Ca,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOX,EAAP,KAAaY,EAAb,KAyBA,OAvBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,WAAMC,GAAN,0FAEDC,EAAAA,EAAAA,IAAA,UAAaC,EAAAA,GAAb,iBAA8BR,EAA9B,YAAiD,CAC5DS,OAAQ,CACNC,QAASC,EAAAA,MAJC,8EAQR,IAAIC,MAAJ,MARQ,wDAAH,sDAYfP,EAAUL,GAASa,MAAK,SAAAC,GACtBX,EAAQW,EAAOC,KAAKxB,KAAKyB,MAAM,EAAG,IACnC,GAEF,GAAE,KAEHZ,EAAAA,EAAAA,YAAU,WACRa,QAAQC,IAAI,gBAAiB3B,EAC9B,GAAE,CAACA,KAGF,0BACE,eAAIC,UAAU,oCAAd,SACGD,EAAK4B,OAAS,GACb5B,EAAK6B,KAAI,SAAAC,GAAE,OACT,yBACE,SAAC,EAAD,CAAU9B,KAAM8B,KADTA,EAAGC,QADH,OAQpB,C,+KC9CM,IAAMX,EAAU,mCACVH,EAAW,gCACXb,EAAiB,8BACjB4B,EAAc,IAAIC,IAC7B,aAGW5B,EAAW,IAAI4B,IAAI,aACnBC,EAAS,CACpB,GAAI,SACJ,GAAI,YACJ,GAAI,YACJ,GAAI,SACJ,GAAI,QACJ,GAAI,cACJ,GAAI,QACJ,MAAO,SACP,GAAI,UACJ,GAAI,UACJ,GAAI,SACJ,MAAO,QACP,KAAM,UACN,MAAO,UACP,IAAK,kBACL,MAAO,WACP,GAAI,WACJ,MAAO,MACP,GAAI,U","sources":["components/CastCard/CastCard.jsx","components/Pages/Cast.jsx","components/Vars.js"],"sourcesContent":["import { IMAGE_BASE_URL, noAvatar } from '../Vars';\nimport PropTypes from 'prop-types';\n\nconst CastCard = ({ cast }) => {\n  return (\n    <div className=\"flex w-44 flex-col px-0.5\">\n      <img\n        className=\"mb-3 h-52 w-44 rounded-xl object-cover object-left-top shadow-sm\"\n        src={\n          cast.profile_path\n            ? `${IMAGE_BASE_URL}w200/${cast.profile_path}`\n            : `${noAvatar}`\n        }\n        alt={cast.name}\n      />\n      <p className=\"li text-center text-lg font-normal leading-4 text-black\">\n        {cast.name}\n      </p>\n      <p className=\"pt-2 text-center text-lg font-light leading-4 text-amber-900\">\n        {cast.character}\n      </p>\n    </div>\n  );\n};\n\nCastCard.propTypes = {\n  film: PropTypes.object,\n};\n\nexport default CastCard;\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { API_KEY, BASE_URL } from '../Vars';\nimport CastCard from '../CastCard/CastCard';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async page => {\n      try {\n        return await axios.get(`${BASE_URL}movie/${movieId}/credits`, {\n          params: {\n            api_key: API_KEY,\n          },\n        });\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n\n    fetchCast(movieId).then(result => {\n      setCast(result.data.cast.slice(0, 18));\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    console.log('Cast Info -> ', cast);\n  }, [cast]);\n\n  return (\n    <div>\n      <ul className=\"flex flex-wrap gap-5 gap-y-7 pt-5\">\n        {cast.length > 0 &&\n          cast.map(el => (\n            <li key={el.cast_id}>\n              <CastCard cast={el} />\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","export const API_KEY = 'ef7bafe2e7e1d8d31566e54facf4d836';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/';\nexport const noPosterUrl = new URL(\n  '../images/no-film-poster.jpg',\n  import.meta.url\n);\nexport const noAvatar = new URL('../images/no-avatar.png', import.meta.url);\nexport const genres = {\n  28: 'Action',\n  12: 'Adventure',\n  16: 'Animation',\n  35: 'Comedy',\n  80: 'Crime',\n  99: 'Documentary',\n  18: 'Drama',\n  10751: 'Family',\n  14: 'Fantasy',\n  36: 'History',\n  27: 'Horror',\n  10402: 'Music',\n  9648: 'Mystery',\n  10749: 'Romance',\n  878: 'Science Fiction',\n  10770: 'TV Movie',\n  53: 'Thriller',\n  10752: 'War',\n  37: 'Western',\n};\n"],"names":["cast","className","src","profile_path","IMAGE_BASE_URL","noAvatar","alt","name","character","movieId","useParams","useState","setCast","useEffect","fetchCast","page","axios","BASE_URL","params","api_key","API_KEY","Error","then","result","data","slice","console","log","length","map","el","cast_id","noPosterUrl","URL","genres"],"sourceRoot":""}
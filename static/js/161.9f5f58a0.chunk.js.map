{"version":3,"file":"static/js/161.9f5f58a0.chunk.js","mappings":"wRAEMA,EAAiBC,EAAAA,GAAAA,IAAH,0DAKpBD,EAAeE,OAASD,EAAAA,GAAAA,IAAxB,kGAKAD,EAAeG,KAAOF,EAAAA,GAAAA,IAAtB,2CAIAD,EAAeI,MAAQH,EAAAA,GAAAA,GAAvB,oFAKA,Q,kBCuBA,EAxCyB,SAAC,GAAe,IAAbI,EAAY,EAAZA,MACpBC,EAAaD,EAAME,OAAOC,KAAI,SAAAC,GAAE,OAAIA,EAAGC,IAAP,IAAaC,KAAK,MAClDC,EAAOP,EAAMQ,aAAaC,MAAM,EAAG,GAEzC,OACE,UAAC,EAAD,YACE,SAAC,SAAD,CACEC,IACEV,EAAMW,YAAN,UACOC,EAAAA,GADP,gBAC6BZ,EAAMW,aADnC,UAEOE,EAAAA,IAETC,IAAKd,EAAMe,SAEb,UAAC,OAAD,YACE,gBAAIC,UAAU,yBAAd,UACGhB,EAAMe,MAAM,KAAC,kBAAMC,UAAU,YAAhB,UAA4B,IAAET,EAAK,WAEnD,cAAGS,UAAU,6BAAb,SAA2Cf,KAC3C,eAAGe,UAAU,2CAAb,UAAwD,iBACvChB,EAAMQ,aAAc,KACnC,iBAAMQ,UAAU,YAAhB,SAA4B,QAAU,WAAShB,EAAMiB,cACrD,iBAAMD,UAAU,YAAhB,SAA4B,QAAU,YAAU,IAC/CE,KAAKC,MAAMnB,EAAMoB,QAAU,IAAI,MAAIF,KAAKC,MAAMnB,EAAMoB,QAAU,IAAI,QAEpEpB,EAAMqB,UACL,cAAGL,UAAU,6CAAb,SACGhB,EAAMqB,WAGX,cAAGL,UAAU,MAAb,SAAoBhB,EAAMsB,gBAIjC,E,oBCtBD,EAdgB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAC1B,OACE,gBACER,UAAS,UAAKO,EAAL,4DADX,SAGGC,GAGN,EC0CD,EA5CkB,WAChB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,WAAMC,GAAN,0FAEDC,EAAAA,EAAAA,IAAA,UAAaC,EAAAA,GAAb,iBAA8BT,GAAW,CACpDU,OAAQ,CACNC,QAASC,EAAAA,GACTC,mBAAoB,YALV,8EAUR,IAAIC,MAAJ,MAVQ,wDAAH,sDAcfR,EAAUN,GAASe,MAAK,SAAAC,GACtBC,QAAQC,IAAI,iBAAkBF,EAAOG,MACrCf,EAAYY,EAAOG,KACpB,GAEF,GAAE,KAGD,UAACC,EAAA,EAAD,WACGjB,EAASkB,KAAM,SAAC,EAAD,CAAkB9C,MAAO4B,KACzC,iBAAKZ,UAAU,kBAAf,WACE,SAAC,KAAD,CAAM+B,GAAE,kBAAatB,EAAb,SAA6BT,UAAU,SAA/C,UACE,SAAC,EAAD,CAASO,QAAS,eAAlB,SAAkC,YAGpC,SAAC,KAAD,CAAMwB,GAAE,kBAAatB,EAAb,YAAgCT,UAAU,SAAlD,UACE,SAAC,EAAD,CAASO,QAAS,cAAlB,SAAiC,kBAGrC,SAAC,KAAD,MAGL,C,+KClDM,IAAMc,EAAU,mCACVH,EAAW,gCACXtB,EAAiB,8BACjBC,EAAc,IAAImC,IAC7B,aAGWC,EAAW,IAAID,IAAI,aACnB9C,EAAS,CACpB,GAAI,SACJ,GAAI,YACJ,GAAI,YACJ,GAAI,SACJ,GAAI,QACJ,GAAI,cACJ,GAAI,QACJ,MAAO,SACP,GAAI,UACJ,GAAI,UACJ,GAAI,SACJ,MAAO,QACP,KAAM,UACN,MAAO,UACP,IAAK,kBACL,MAAO,WACP,GAAI,WACJ,MAAO,MACP,GAAI,U","sources":["components/MovieInfoDetails/MovieInfoDetails.component.jsx","components/MovieInfoDetails/MovieInfoDetails.jsx","components/Button/CButton.jsx","components/Pages/MovieDetails.jsx","components/Vars.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst StMovieDetails = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nStMovieDetails.Poster = styled.img`\n  width: 300px;\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n`;\n\nStMovieDetails.Info = styled.div`\n  display: block;\n`;\n\nStMovieDetails.Title = styled.h2`\n  font-size: 36px;\n  font-weight: 700;\n  color: #222222;\n`;\nexport default StMovieDetails;\n","import StMovieDetails from './MovieInfoDetails.component';\nimport { IMAGE_BASE_URL, noPosterUrl } from '../Vars';\nimport PropTypes from 'prop-types';\n\nconst MovieInfoDetails = ({ movie }) => {\n  const genreslist = movie.genres.map(el => el.name).join(', ');\n  const year = movie.release_date.slice(0, 4);\n\n  return (\n    <StMovieDetails>\n      <StMovieDetails.Poster\n        src={\n          movie.poster_path\n            ? `${IMAGE_BASE_URL}w500/${movie.poster_path}`\n            : `${noPosterUrl}`\n        }\n        alt={movie.title}\n      />\n      <StMovieDetails.Info>\n        <h2 className=\"p-5 text-3xl font-bold\">\n          {movie.title} <span className=\"font-thin\">({year})</span>\n        </h2>\n        <p className=\"px-5 text-lg text-teal-800\">{genreslist}</p>\n        <p className=\"p-2 px-5 text-sm font-bold text-gray-600\">\n          Release Date: {movie.release_date}{' '}\n          <span className=\"font-thin\"> | </span>Rating: {movie.vote_average}\n          <span className=\"font-thin\"> | </span>Duration:{' '}\n          {Math.round(movie.runtime / 60)} h {Math.round(movie.runtime % 60)} m\n        </p>\n        {movie.tagline && (\n          <p className=\"px-5 pt-4 text-2xl italic text-orange-500 \">\n            {movie.tagline}\n          </p>\n        )}\n        <p className=\"p-5\">{movie.overview}</p>\n      </StMovieDetails.Info>\n    </StMovieDetails>\n  );\n};\n\nMovieInfoDetails.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n\nexport default MovieInfoDetails;\n","import PropTypes from 'prop-types';\n\nconst CButton = ({ bgcolor, children }) => {\n  return (\n    <div\n      className={`${bgcolor} h-full w-full cursor-pointer p-2 text-center text-black`}\n    >\n      {children}\n    </div>\n  );\n};\n\nCButton.propTypes = {\n  bgcolor: PropTypes.string.isRequired,\n};\n\nexport default CButton;\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Container from '../Container/Container';\nimport MovieInfoDetails from '../MovieInfoDetails/MovieInfoDetails';\nimport { useParams, Link, Outlet } from 'react-router-dom';\nimport { API_KEY, BASE_URL } from '../Vars';\nimport CButton from 'components/Button/CButton';\n\nconst MovieInfo = () => {\n  const { movieId } = useParams();\n\n  const [filmInfo, setFilmInfo] = useState([]);\n\n  useEffect(() => {\n    const fetchFilm = async page => {\n      try {\n        return await axios.get(`${BASE_URL}movie/${movieId}`, {\n          params: {\n            api_key: API_KEY,\n            append_to_response: 'images',\n            //            language: 'uk',\n          },\n        });\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n\n    fetchFilm(movieId).then(result => {\n      console.log('Movie Info -> ', result.data);\n      setFilmInfo(result.data);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Container>\n      {filmInfo.id && <MovieInfoDetails movie={filmInfo} />}\n      <div className=\"mt-4 flex gap-3\">\n        <Link to={`/movies/${movieId}/cast`} className=\"w-full\">\n          <CButton bgcolor={'bg-amber-200'}>Cast</CButton>\n        </Link>\n\n        <Link to={`/movies/${movieId}/reviews`} className=\"w-full\">\n          <CButton bgcolor={'bg-teal-200'}>Reviews</CButton>\n        </Link>\n      </div>\n      <Outlet />\n    </Container>\n  );\n};\n\nexport default MovieInfo;\n","export const API_KEY = 'ef7bafe2e7e1d8d31566e54facf4d836';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/';\nexport const noPosterUrl = new URL(\n  '../images/no-film-poster.jpg',\n  import.meta.url\n);\nexport const noAvatar = new URL('../images/no-avatar.png', import.meta.url);\nexport const genres = {\n  28: 'Action',\n  12: 'Adventure',\n  16: 'Animation',\n  35: 'Comedy',\n  80: 'Crime',\n  99: 'Documentary',\n  18: 'Drama',\n  10751: 'Family',\n  14: 'Fantasy',\n  36: 'History',\n  27: 'Horror',\n  10402: 'Music',\n  9648: 'Mystery',\n  10749: 'Romance',\n  878: 'Science Fiction',\n  10770: 'TV Movie',\n  53: 'Thriller',\n  10752: 'War',\n  37: 'Western',\n};\n"],"names":["StMovieDetails","styled","Poster","Info","Title","movie","genreslist","genres","map","el","name","join","year","release_date","slice","src","poster_path","IMAGE_BASE_URL","noPosterUrl","alt","title","className","vote_average","Math","round","runtime","tagline","overview","bgcolor","children","movieId","useParams","useState","filmInfo","setFilmInfo","useEffect","fetchFilm","page","axios","BASE_URL","params","api_key","API_KEY","append_to_response","Error","then","result","console","log","data","Container","id","to","URL","noAvatar"],"sourceRoot":""}